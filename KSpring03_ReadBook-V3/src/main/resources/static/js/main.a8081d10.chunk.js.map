{"version":3,"sources":["comps/AdddressInput.jsx","comps/AddressView.jsx","App.js","reportWebVitals.js","index.js"],"names":["AdddressInput","address","setAddress","onChangeHandler","e","target","name","value","className","type","onChange","AddressView","u_name","u_addr","u_tel","u_age","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA8CeA,MA5Cf,YAAiD,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAC1BC,EAAkB,SAACC,GAAO,IAAD,EACLA,EAAEC,OAAlBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MAiBdL,EAAW,2BAAKD,GAAN,kBAAgBK,EAAOC,MAGnC,OACE,sBAAKC,UAAU,aAAf,UACE,gCACE,iDACA,uBAAOF,KAAK,SAASG,KAAK,OAAOC,SAAUP,OAE7C,gCACE,iDACA,uBAAOG,KAAK,SAASG,KAAK,OAAOC,SAAUP,OAE7C,gCACE,6DACA,uBAAOG,KAAK,QAAQG,KAAK,OAAOC,SAAUP,OAE5C,gCACE,iDACA,uBAAOG,KAAK,QAAQG,KAAK,OAAOC,SAAUP,WC3BnCQ,MAXf,YAAmC,IAAZV,EAAW,EAAXA,QACrB,OACE,gCACE,kDAAWA,EAAQW,UACnB,kDAAWX,EAAQY,UACnB,8DAAaZ,EAAQa,SACrB,kDAAWb,EAAQc,aCcVC,MAjBf,WAAgB,IAAD,EACiBC,mBAAS,CACrCL,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,MAAO,IALI,mBACNd,EADM,KACGC,EADH,KAOb,OACE,qBAAKM,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAeP,QAASA,EAASC,WAAYA,IAC7C,cAAC,EAAD,CAAaD,QAASA,UCJfiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a8081d10.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AdddressInput({ address, setAddress }) {\r\n  const onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    /**\r\n     * 계산식 속성 이름, computed property name\r\n     * 변수이름을 변수값으로 생성하기\r\n     * if(e.target.name === \"u_name\")\r\n     * \t\tsetAddress({...address,\"u_name\" : value})\r\n     * else if(e.target.name == \"u_addr\")\r\n     * \t\tsetAddress({...address,\"uaddr\" : value})\r\n     * JS ES6이상에서 새롭게 만들어진 변수생성 문법\r\n     * 변수를 [] 묶어주고 값을 저장하면 변수에 담긴 문자열로\r\n     * 변수를 생성해주는 구조\r\n     * const [name] = \"대한민국\" name 변수가 아닌 name에 담긴 문자열이\r\n     * 변수가 되는 구조\r\n     *\r\n     * CPN : 표현식을 사용하여 객체의 key을 정의하는 문법이다.\r\n     */\r\n\r\n    setAddress({ ...address, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input_form\">\r\n      <div>\r\n        <label>이름</label>\r\n        <input name=\"u_name\" type=\"text\" onChange={onChangeHandler} />\r\n      </div>\r\n      <div>\r\n        <label>주소</label>\r\n        <input name=\"u_addr\" type=\"text\" onChange={onChangeHandler} />\r\n      </div>\r\n      <div>\r\n        <label>전화번호</label>\r\n        <input name=\"u_tel\" type=\"text\" onChange={onChangeHandler} />\r\n      </div>\r\n      <div>\r\n        <label>나이</label>\r\n        <input name=\"u_age\" type=\"text\" onChange={onChangeHandler} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdddressInput;\r\n","import React from \"react\";\r\n\r\nfunction AddressView({ address }) {\r\n  return (\r\n    <div>\r\n      <div>이름 : {address.u_name}</div>\r\n      <div>주소 : {address.u_addr}</div>\r\n      <div>전화번호 : {address.u_tel}</div>\r\n      <div>나이 : {address.u_age}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddressView;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport AdddressInput from \"./comps/AdddressInput\";\nimport AddressView from \"./comps/AddressView\";\n\nfunction App() {\n  const [address, setAddress] = useState({\n    u_name: \"\",\n    u_addr: \"\",\n    u_tel: \"\",\n    u_age: 0,\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AdddressInput address={address} setAddress={setAddress} />\n        <AddressView address={address} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}